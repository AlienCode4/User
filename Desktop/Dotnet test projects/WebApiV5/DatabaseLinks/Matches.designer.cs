#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiV5.DatabaseLinks
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class MatchesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMatch(Match instance);
    partial void UpdateMatch(Match instance);
    partial void DeleteMatch(Match instance);
    #endregion
		
		public MatchesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MatchesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MatchesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MatchesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MatchesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Match> Matches
		{
			get
			{
				return this.GetTable<Match>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Match")]
	public partial class Match : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MatchID;
		
		private int _EventID;
		
		private int _TalentID;
		
		private int _RedCards;
		
		private int _Yellowcards;
		
		private int _Timeplayed;
		
		private string _Start;
		
		private int _goals;
		
		private string _Position;
		
		private int _GoalAssits;
		
		private int _TacklesMade;
		
		private int _GoalsSaved;
		
		private int _Fouls;
		
		private string _IsAvailable;
		
		private int _Passes;
		
		private int _SuccessfulPasses;
		
		private int _ShotONTarget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatchIDChanging(int value);
    partial void OnMatchIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnTalentIDChanging(int value);
    partial void OnTalentIDChanged();
    partial void OnRedCardsChanging(int value);
    partial void OnRedCardsChanged();
    partial void OnYellowcardsChanging(int value);
    partial void OnYellowcardsChanged();
    partial void OnTimeplayedChanging(int value);
    partial void OnTimeplayedChanged();
    partial void OnStartChanging(string value);
    partial void OnStartChanged();
    partial void OngoalsChanging(int value);
    partial void OngoalsChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnGoalAssitsChanging(int value);
    partial void OnGoalAssitsChanged();
    partial void OnTacklesMadeChanging(int value);
    partial void OnTacklesMadeChanged();
    partial void OnGoalsSavedChanging(int value);
    partial void OnGoalsSavedChanged();
    partial void OnFoulsChanging(int value);
    partial void OnFoulsChanged();
    partial void OnIsAvailableChanging(string value);
    partial void OnIsAvailableChanged();
    partial void OnPassesChanging(int value);
    partial void OnPassesChanged();
    partial void OnSuccessfulPassesChanging(int value);
    partial void OnSuccessfulPassesChanged();
    partial void OnShotONTargetChanging(int value);
    partial void OnShotONTargetChanged();
    #endregion
		
		public Match()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MatchID
		{
			get
			{
				return this._MatchID;
			}
			set
			{
				if ((this._MatchID != value))
				{
					this.OnMatchIDChanging(value);
					this.SendPropertyChanging();
					this._MatchID = value;
					this.SendPropertyChanged("MatchID");
					this.OnMatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TalentID", DbType="Int NOT NULL")]
		public int TalentID
		{
			get
			{
				return this._TalentID;
			}
			set
			{
				if ((this._TalentID != value))
				{
					this.OnTalentIDChanging(value);
					this.SendPropertyChanging();
					this._TalentID = value;
					this.SendPropertyChanged("TalentID");
					this.OnTalentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedCards", DbType="Int NOT NULL")]
		public int RedCards
		{
			get
			{
				return this._RedCards;
			}
			set
			{
				if ((this._RedCards != value))
				{
					this.OnRedCardsChanging(value);
					this.SendPropertyChanging();
					this._RedCards = value;
					this.SendPropertyChanged("RedCards");
					this.OnRedCardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yellowcards", DbType="Int NOT NULL")]
		public int Yellowcards
		{
			get
			{
				return this._Yellowcards;
			}
			set
			{
				if ((this._Yellowcards != value))
				{
					this.OnYellowcardsChanging(value);
					this.SendPropertyChanging();
					this._Yellowcards = value;
					this.SendPropertyChanged("Yellowcards");
					this.OnYellowcardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeplayed", DbType="Int NOT NULL")]
		public int Timeplayed
		{
			get
			{
				return this._Timeplayed;
			}
			set
			{
				if ((this._Timeplayed != value))
				{
					this.OnTimeplayedChanging(value);
					this.SendPropertyChanging();
					this._Timeplayed = value;
					this.SendPropertyChanged("Timeplayed");
					this.OnTimeplayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Start
		{
			get
			{
				return this._Start;
			}
			set
			{
				if ((this._Start != value))
				{
					this.OnStartChanging(value);
					this.SendPropertyChanging();
					this._Start = value;
					this.SendPropertyChanged("Start");
					this.OnStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goals", DbType="Int NOT NULL")]
		public int goals
		{
			get
			{
				return this._goals;
			}
			set
			{
				if ((this._goals != value))
				{
					this.OngoalsChanging(value);
					this.SendPropertyChanging();
					this._goals = value;
					this.SendPropertyChanged("goals");
					this.OngoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalAssits", DbType="Int NOT NULL")]
		public int GoalAssits
		{
			get
			{
				return this._GoalAssits;
			}
			set
			{
				if ((this._GoalAssits != value))
				{
					this.OnGoalAssitsChanging(value);
					this.SendPropertyChanging();
					this._GoalAssits = value;
					this.SendPropertyChanged("GoalAssits");
					this.OnGoalAssitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TacklesMade", DbType="Int NOT NULL")]
		public int TacklesMade
		{
			get
			{
				return this._TacklesMade;
			}
			set
			{
				if ((this._TacklesMade != value))
				{
					this.OnTacklesMadeChanging(value);
					this.SendPropertyChanging();
					this._TacklesMade = value;
					this.SendPropertyChanged("TacklesMade");
					this.OnTacklesMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalsSaved", DbType="Int NOT NULL")]
		public int GoalsSaved
		{
			get
			{
				return this._GoalsSaved;
			}
			set
			{
				if ((this._GoalsSaved != value))
				{
					this.OnGoalsSavedChanging(value);
					this.SendPropertyChanging();
					this._GoalsSaved = value;
					this.SendPropertyChanged("GoalsSaved");
					this.OnGoalsSavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fouls", DbType="Int NOT NULL")]
		public int Fouls
		{
			get
			{
				return this._Fouls;
			}
			set
			{
				if ((this._Fouls != value))
				{
					this.OnFoulsChanging(value);
					this.SendPropertyChanging();
					this._Fouls = value;
					this.SendPropertyChanged("Fouls");
					this.OnFoulsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passes", DbType="Int NOT NULL")]
		public int Passes
		{
			get
			{
				return this._Passes;
			}
			set
			{
				if ((this._Passes != value))
				{
					this.OnPassesChanging(value);
					this.SendPropertyChanging();
					this._Passes = value;
					this.SendPropertyChanged("Passes");
					this.OnPassesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessfulPasses", DbType="Int NOT NULL")]
		public int SuccessfulPasses
		{
			get
			{
				return this._SuccessfulPasses;
			}
			set
			{
				if ((this._SuccessfulPasses != value))
				{
					this.OnSuccessfulPassesChanging(value);
					this.SendPropertyChanging();
					this._SuccessfulPasses = value;
					this.SendPropertyChanged("SuccessfulPasses");
					this.OnSuccessfulPassesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShotONTarget", DbType="Int NOT NULL")]
		public int ShotONTarget
		{
			get
			{
				return this._ShotONTarget;
			}
			set
			{
				if ((this._ShotONTarget != value))
				{
					this.OnShotONTargetChanging(value);
					this.SendPropertyChanging();
					this._ShotONTarget = value;
					this.SendPropertyChanged("ShotONTarget");
					this.OnShotONTargetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
