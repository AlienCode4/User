#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiV5.DatabaseLinks
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class VideosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    #endregion
		
		public VideosDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VideosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VideosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VideosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VideosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Video> Videos
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VideoID;
		
		private string _VideoName;
		
		private string _VideoDescption;
		
		private string _VideoFIleName;
		
		private int _VideoLikes;
		
		private int _VideoViews;
		
		private string _isAvailable;
		
		private int _UserId;
		
		private int _SportID;
		
		private System.DateTime _DatePosted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoIDChanging(int value);
    partial void OnVideoIDChanged();
    partial void OnVideoNameChanging(string value);
    partial void OnVideoNameChanged();
    partial void OnVideoDescptionChanging(string value);
    partial void OnVideoDescptionChanged();
    partial void OnVideoFIleNameChanging(string value);
    partial void OnVideoFIleNameChanged();
    partial void OnVideoLikesChanging(int value);
    partial void OnVideoLikesChanged();
    partial void OnVideoViewsChanging(int value);
    partial void OnVideoViewsChanged();
    partial void OnisAvailableChanging(string value);
    partial void OnisAvailableChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSportIDChanging(int value);
    partial void OnSportIDChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    #endregion
		
		public Video()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VideoID
		{
			get
			{
				return this._VideoID;
			}
			set
			{
				if ((this._VideoID != value))
				{
					this.OnVideoIDChanging(value);
					this.SendPropertyChanging();
					this._VideoID = value;
					this.SendPropertyChanged("VideoID");
					this.OnVideoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string VideoName
		{
			get
			{
				return this._VideoName;
			}
			set
			{
				if ((this._VideoName != value))
				{
					this.OnVideoNameChanging(value);
					this.SendPropertyChanging();
					this._VideoName = value;
					this.SendPropertyChanged("VideoName");
					this.OnVideoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoDescption", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string VideoDescption
		{
			get
			{
				return this._VideoDescption;
			}
			set
			{
				if ((this._VideoDescption != value))
				{
					this.OnVideoDescptionChanging(value);
					this.SendPropertyChanging();
					this._VideoDescption = value;
					this.SendPropertyChanged("VideoDescption");
					this.OnVideoDescptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoFIleName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string VideoFIleName
		{
			get
			{
				return this._VideoFIleName;
			}
			set
			{
				if ((this._VideoFIleName != value))
				{
					this.OnVideoFIleNameChanging(value);
					this.SendPropertyChanging();
					this._VideoFIleName = value;
					this.SendPropertyChanged("VideoFIleName");
					this.OnVideoFIleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoLikes", DbType="Int NOT NULL")]
		public int VideoLikes
		{
			get
			{
				return this._VideoLikes;
			}
			set
			{
				if ((this._VideoLikes != value))
				{
					this.OnVideoLikesChanging(value);
					this.SendPropertyChanging();
					this._VideoLikes = value;
					this.SendPropertyChanged("VideoLikes");
					this.OnVideoLikesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoViews", DbType="Int NOT NULL")]
		public int VideoViews
		{
			get
			{
				return this._VideoViews;
			}
			set
			{
				if ((this._VideoViews != value))
				{
					this.OnVideoViewsChanging(value);
					this.SendPropertyChanging();
					this._VideoViews = value;
					this.SendPropertyChanged("VideoViews");
					this.OnVideoViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAvailable", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string isAvailable
		{
			get
			{
				return this._isAvailable;
			}
			set
			{
				if ((this._isAvailable != value))
				{
					this.OnisAvailableChanging(value);
					this.SendPropertyChanging();
					this._isAvailable = value;
					this.SendPropertyChanged("isAvailable");
					this.OnisAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SportID", DbType="Int NOT NULL")]
		public int SportID
		{
			get
			{
				return this._SportID;
			}
			set
			{
				if ((this._SportID != value))
				{
					this.OnSportIDChanging(value);
					this.SendPropertyChanging();
					this._SportID = value;
					this.SendPropertyChanged("SportID");
					this.OnSportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePosted", DbType="Date NOT NULL")]
		public System.DateTime DatePosted
		{
			get
			{
				return this._DatePosted;
			}
			set
			{
				if ((this._DatePosted != value))
				{
					this.OnDatePostedChanging(value);
					this.SendPropertyChanging();
					this._DatePosted = value;
					this.SendPropertyChanged("DatePosted");
					this.OnDatePostedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
